/*
 * Fideo API
 * Fideo Intelligence offers an identity intelligence product that protects the public good. - [Fideo Privacy Policy](https://www.fideo.ai/privacy-policy/)
 *
 * The version of the OpenAPI document: 1.0.3
 * Contact: support@fideo.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ai.fideo.model;

import java.util.Objects;
import ai.fideo.model.Evidence;
import ai.fideo.model.ScoreDetails;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import ai.fideo.client.JSON;

/**
 * MatchResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class MatchResponse {
  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_REGION_CODE = "regionCode";
  @SerializedName(SERIALIZED_NAME_REGION_CODE)
  private String regionCode;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_CONTINENT = "continent";
  @SerializedName(SERIALIZED_NAME_CONTINENT)
  private String continent;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_FAMILY_NAME = "familyName";
  @SerializedName(SERIALIZED_NAME_FAMILY_NAME)
  private String familyName;

  public static final String SERIALIZED_NAME_GIVEN_NAME = "givenName";
  @SerializedName(SERIALIZED_NAME_GIVEN_NAME)
  private String givenName;

  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_MAID = "maid";
  @SerializedName(SERIALIZED_NAME_MAID)
  private String maid;

  public static final String SERIALIZED_NAME_SOCIAL = "social";
  @SerializedName(SERIALIZED_NAME_SOCIAL)
  private String social;

  public static final String SERIALIZED_NAME_NON_ID = "nonId";
  @SerializedName(SERIALIZED_NAME_NON_ID)
  private String nonId;

  public static final String SERIALIZED_NAME_PANORAMA_ID = "panoramaId";
  @SerializedName(SERIALIZED_NAME_PANORAMA_ID)
  private String panoramaId;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_BIRTHDAY = "birthday";
  @SerializedName(SERIALIZED_NAME_BIRTHDAY)
  private String birthday;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private String organization;

  public static final String SERIALIZED_NAME_RISK = "risk";
  @SerializedName(SERIALIZED_NAME_RISK)
  private Double risk;

  public static final String SERIALIZED_NAME_EVIDENCE = "evidence";
  @SerializedName(SERIALIZED_NAME_EVIDENCE)
  private Evidence evidence;

  public static final String SERIALIZED_NAME_RISK_V2 = "riskV2";
  @SerializedName(SERIALIZED_NAME_RISK_V2)
  private Double riskV2;

  public static final String SERIALIZED_NAME_RISK_V3 = "riskV3";
  @SerializedName(SERIALIZED_NAME_RISK_V3)
  private Double riskV3;

  public static final String SERIALIZED_NAME_SCORE_DETAILS = "scoreDetails";
  @SerializedName(SERIALIZED_NAME_SCORE_DETAILS)
  private List<ScoreDetails> scoreDetails = new ArrayList<>();

  public MatchResponse() {
  }

  public MatchResponse addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

  /**
   * Get addressLine1
   * @return addressLine1
   */
  @javax.annotation.Nullable
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public MatchResponse addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

  /**
   * Get addressLine2
   * @return addressLine2
   */
  @javax.annotation.Nullable
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public MatchResponse city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public MatchResponse region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public MatchResponse regionCode(String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  /**
   * Get regionCode
   * @return regionCode
   */
  @javax.annotation.Nullable
  public String getRegionCode() {
    return regionCode;
  }

  public void setRegionCode(String regionCode) {
    this.regionCode = regionCode;
  }


  public MatchResponse country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public MatchResponse continent(String continent) {
    this.continent = continent;
    return this;
  }

  /**
   * Get continent
   * @return continent
   */
  @javax.annotation.Nullable
  public String getContinent() {
    return continent;
  }

  public void setContinent(String continent) {
    this.continent = continent;
  }


  public MatchResponse postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public MatchResponse familyName(String familyName) {
    this.familyName = familyName;
    return this;
  }

  /**
   * Get familyName
   * @return familyName
   */
  @javax.annotation.Nullable
  public String getFamilyName() {
    return familyName;
  }

  public void setFamilyName(String familyName) {
    this.familyName = familyName;
  }


  public MatchResponse givenName(String givenName) {
    this.givenName = givenName;
    return this;
  }

  /**
   * Get givenName
   * @return givenName
   */
  @javax.annotation.Nullable
  public String getGivenName() {
    return givenName;
  }

  public void setGivenName(String givenName) {
    this.givenName = givenName;
  }


  public MatchResponse fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nullable
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public MatchResponse phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public MatchResponse email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public MatchResponse maid(String maid) {
    this.maid = maid;
    return this;
  }

  /**
   * Get maid
   * @return maid
   */
  @javax.annotation.Nullable
  public String getMaid() {
    return maid;
  }

  public void setMaid(String maid) {
    this.maid = maid;
  }


  public MatchResponse social(String social) {
    this.social = social;
    return this;
  }

  /**
   * Get social
   * @return social
   */
  @javax.annotation.Nullable
  public String getSocial() {
    return social;
  }

  public void setSocial(String social) {
    this.social = social;
  }


  public MatchResponse nonId(String nonId) {
    this.nonId = nonId;
    return this;
  }

  /**
   * Get nonId
   * @return nonId
   */
  @javax.annotation.Nullable
  public String getNonId() {
    return nonId;
  }

  public void setNonId(String nonId) {
    this.nonId = nonId;
  }


  public MatchResponse panoramaId(String panoramaId) {
    this.panoramaId = panoramaId;
    return this;
  }

  /**
   * Get panoramaId
   * @return panoramaId
   */
  @javax.annotation.Nullable
  public String getPanoramaId() {
    return panoramaId;
  }

  public void setPanoramaId(String panoramaId) {
    this.panoramaId = panoramaId;
  }


  public MatchResponse ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Get ipAddress
   * @return ipAddress
   */
  @javax.annotation.Nullable
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public MatchResponse birthday(String birthday) {
    this.birthday = birthday;
    return this;
  }

  /**
   * Get birthday
   * @return birthday
   */
  @javax.annotation.Nullable
  public String getBirthday() {
    return birthday;
  }

  public void setBirthday(String birthday) {
    this.birthday = birthday;
  }


  public MatchResponse title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public MatchResponse organization(String organization) {
    this.organization = organization;
    return this;
  }

  /**
   * Get organization
   * @return organization
   */
  @javax.annotation.Nullable
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }


  public MatchResponse risk(Double risk) {
    this.risk = risk;
    return this;
  }

  /**
   * Get risk
   * @return risk
   */
  @javax.annotation.Nullable
  public Double getRisk() {
    return risk;
  }

  public void setRisk(Double risk) {
    this.risk = risk;
  }


  public MatchResponse evidence(Evidence evidence) {
    this.evidence = evidence;
    return this;
  }

  /**
   * Get evidence
   * @return evidence
   */
  @javax.annotation.Nullable
  public Evidence getEvidence() {
    return evidence;
  }

  public void setEvidence(Evidence evidence) {
    this.evidence = evidence;
  }


  public MatchResponse riskV2(Double riskV2) {
    this.riskV2 = riskV2;
    return this;
  }

  /**
   * Get riskV2
   * @return riskV2
   */
  @javax.annotation.Nullable
  public Double getRiskV2() {
    return riskV2;
  }

  public void setRiskV2(Double riskV2) {
    this.riskV2 = riskV2;
  }


  public MatchResponse riskV3(Double riskV3) {
    this.riskV3 = riskV3;
    return this;
  }

  /**
   * Get riskV3
   * @return riskV3
   */
  @javax.annotation.Nullable
  public Double getRiskV3() {
    return riskV3;
  }

  public void setRiskV3(Double riskV3) {
    this.riskV3 = riskV3;
  }


  public MatchResponse scoreDetails(List<ScoreDetails> scoreDetails) {
    this.scoreDetails = scoreDetails;
    return this;
  }

  public MatchResponse addScoreDetailsItem(ScoreDetails scoreDetailsItem) {
    if (this.scoreDetails == null) {
      this.scoreDetails = new ArrayList<>();
    }
    this.scoreDetails.add(scoreDetailsItem);
    return this;
  }

  /**
   * Get scoreDetails
   * @return scoreDetails
   */
  @javax.annotation.Nullable
  public List<ScoreDetails> getScoreDetails() {
    return scoreDetails;
  }

  public void setScoreDetails(List<ScoreDetails> scoreDetails) {
    this.scoreDetails = scoreDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchResponse matchResponse = (MatchResponse) o;
    return Objects.equals(this.addressLine1, matchResponse.addressLine1) &&
        Objects.equals(this.addressLine2, matchResponse.addressLine2) &&
        Objects.equals(this.city, matchResponse.city) &&
        Objects.equals(this.region, matchResponse.region) &&
        Objects.equals(this.regionCode, matchResponse.regionCode) &&
        Objects.equals(this.country, matchResponse.country) &&
        Objects.equals(this.continent, matchResponse.continent) &&
        Objects.equals(this.postalCode, matchResponse.postalCode) &&
        Objects.equals(this.familyName, matchResponse.familyName) &&
        Objects.equals(this.givenName, matchResponse.givenName) &&
        Objects.equals(this.fullName, matchResponse.fullName) &&
        Objects.equals(this.phone, matchResponse.phone) &&
        Objects.equals(this.email, matchResponse.email) &&
        Objects.equals(this.maid, matchResponse.maid) &&
        Objects.equals(this.social, matchResponse.social) &&
        Objects.equals(this.nonId, matchResponse.nonId) &&
        Objects.equals(this.panoramaId, matchResponse.panoramaId) &&
        Objects.equals(this.ipAddress, matchResponse.ipAddress) &&
        Objects.equals(this.birthday, matchResponse.birthday) &&
        Objects.equals(this.title, matchResponse.title) &&
        Objects.equals(this.organization, matchResponse.organization) &&
        Objects.equals(this.risk, matchResponse.risk) &&
        Objects.equals(this.evidence, matchResponse.evidence) &&
        Objects.equals(this.riskV2, matchResponse.riskV2) &&
        Objects.equals(this.riskV3, matchResponse.riskV3) &&
        Objects.equals(this.scoreDetails, matchResponse.scoreDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine1, addressLine2, city, region, regionCode, country, continent, postalCode, familyName, givenName, fullName, phone, email, maid, social, nonId, panoramaId, ipAddress, birthday, title, organization, risk, evidence, riskV2, riskV3, scoreDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchResponse {\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    regionCode: ").append(toIndentedString(regionCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    continent: ").append(toIndentedString(continent)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    maid: ").append(toIndentedString(maid)).append("\n");
    sb.append("    social: ").append(toIndentedString(social)).append("\n");
    sb.append("    nonId: ").append(toIndentedString(nonId)).append("\n");
    sb.append("    panoramaId: ").append(toIndentedString(panoramaId)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    risk: ").append(toIndentedString(risk)).append("\n");
    sb.append("    evidence: ").append(toIndentedString(evidence)).append("\n");
    sb.append("    riskV2: ").append(toIndentedString(riskV2)).append("\n");
    sb.append("    riskV3: ").append(toIndentedString(riskV3)).append("\n");
    sb.append("    scoreDetails: ").append(toIndentedString(scoreDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine2");
    openapiFields.add("city");
    openapiFields.add("region");
    openapiFields.add("regionCode");
    openapiFields.add("country");
    openapiFields.add("continent");
    openapiFields.add("postalCode");
    openapiFields.add("familyName");
    openapiFields.add("givenName");
    openapiFields.add("fullName");
    openapiFields.add("phone");
    openapiFields.add("email");
    openapiFields.add("maid");
    openapiFields.add("social");
    openapiFields.add("nonId");
    openapiFields.add("panoramaId");
    openapiFields.add("ipAddress");
    openapiFields.add("birthday");
    openapiFields.add("title");
    openapiFields.add("organization");
    openapiFields.add("risk");
    openapiFields.add("evidence");
    openapiFields.add("riskV2");
    openapiFields.add("riskV3");
    openapiFields.add("scoreDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MatchResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MatchResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MatchResponse is not found in the empty JSON string", MatchResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MatchResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MatchResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("regionCode") != null && !jsonObj.get("regionCode").isJsonNull()) && !jsonObj.get("regionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regionCode").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("continent") != null && !jsonObj.get("continent").isJsonNull()) && !jsonObj.get("continent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `continent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("continent").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("familyName") != null && !jsonObj.get("familyName").isJsonNull()) && !jsonObj.get("familyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `familyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("familyName").toString()));
      }
      if ((jsonObj.get("givenName") != null && !jsonObj.get("givenName").isJsonNull()) && !jsonObj.get("givenName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `givenName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("givenName").toString()));
      }
      if ((jsonObj.get("fullName") != null && !jsonObj.get("fullName").isJsonNull()) && !jsonObj.get("fullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullName").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("maid") != null && !jsonObj.get("maid").isJsonNull()) && !jsonObj.get("maid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maid").toString()));
      }
      if ((jsonObj.get("social") != null && !jsonObj.get("social").isJsonNull()) && !jsonObj.get("social").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `social` to be a primitive type in the JSON string but got `%s`", jsonObj.get("social").toString()));
      }
      if ((jsonObj.get("nonId") != null && !jsonObj.get("nonId").isJsonNull()) && !jsonObj.get("nonId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nonId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nonId").toString()));
      }
      if ((jsonObj.get("panoramaId") != null && !jsonObj.get("panoramaId").isJsonNull()) && !jsonObj.get("panoramaId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `panoramaId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("panoramaId").toString()));
      }
      if ((jsonObj.get("ipAddress") != null && !jsonObj.get("ipAddress").isJsonNull()) && !jsonObj.get("ipAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ipAddress").toString()));
      }
      if ((jsonObj.get("birthday") != null && !jsonObj.get("birthday").isJsonNull()) && !jsonObj.get("birthday").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `birthday` to be a primitive type in the JSON string but got `%s`", jsonObj.get("birthday").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("organization") != null && !jsonObj.get("organization").isJsonNull()) && !jsonObj.get("organization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization").toString()));
      }
      // validate the optional field `evidence`
      if (jsonObj.get("evidence") != null && !jsonObj.get("evidence").isJsonNull()) {
        Evidence.validateJsonElement(jsonObj.get("evidence"));
      }
      if (jsonObj.get("scoreDetails") != null && !jsonObj.get("scoreDetails").isJsonNull()) {
        JsonArray jsonArrayscoreDetails = jsonObj.getAsJsonArray("scoreDetails");
        if (jsonArrayscoreDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("scoreDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `scoreDetails` to be an array in the JSON string but got `%s`", jsonObj.get("scoreDetails").toString()));
          }

          // validate the optional field `scoreDetails` (array)
          for (int i = 0; i < jsonArrayscoreDetails.size(); i++) {
            ScoreDetails.validateJsonElement(jsonArrayscoreDetails.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MatchResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MatchResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MatchResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MatchResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<MatchResponse>() {
           @Override
           public void write(JsonWriter out, MatchResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MatchResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MatchResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MatchResponse
   * @throws IOException if the JSON string is invalid with respect to MatchResponse
   */
  public static MatchResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MatchResponse.class);
  }

  /**
   * Convert an instance of MatchResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

