/*
 * Fideo API
 * This is a representation of the Fideo API based on the OpenAPI 3.0 specification.  You can find out more about Swagger at [https://swagger.io](https://swagger.io). Some useful links: - [Fideo Privacy Policy](https://www.fideo.ai/privacy-policy/)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@fideo.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ai.fideo.model;

import java.util.Objects;
import ai.fideo.model.Demographics;
import ai.fideo.model.Economic;
import ai.fideo.model.Education;
import ai.fideo.model.Email;
import ai.fideo.model.Employment;
import ai.fideo.model.IpAddress;
import ai.fideo.model.Location;
import ai.fideo.model.NameWithAlias;
import ai.fideo.model.Phone;
import ai.fideo.model.Photo;
import ai.fideo.model.SocialProfileDetails;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import ai.fideo.client.JSON;

/**
 * SignalsResponseV20240424
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-01T10:34:47.407093-04:00[America/New_York]", comments = "Generator version: 7.6.0")
public class SignalsResponseV20240424 {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private NameWithAlias name;

  public static final String SERIALIZED_NAME_DEMOGRAPHICS = "demographics";
  @SerializedName(SERIALIZED_NAME_DEMOGRAPHICS)
  private Demographics demographics;

  public static final String SERIALIZED_NAME_LOCATIONS = "locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private List<Location> locations = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMAILS = "emails";
  @SerializedName(SERIALIZED_NAME_EMAILS)
  private List<Email> emails = new ArrayList<>();

  public static final String SERIALIZED_NAME_PHONES = "phones";
  @SerializedName(SERIALIZED_NAME_PHONES)
  private List<Phone> phones = new ArrayList<>();

  public static final String SERIALIZED_NAME_PERSON_IDS = "personIds";
  @SerializedName(SERIALIZED_NAME_PERSON_IDS)
  private List<String> personIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_IP_ADDRESSES = "ipAddresses";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESSES)
  private List<IpAddress> ipAddresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_SOCIAL_PROFILES = "socialProfiles";
  @SerializedName(SERIALIZED_NAME_SOCIAL_PROFILES)
  private List<SocialProfileDetails> socialProfiles = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMPLOYMENT = "employment";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT)
  private List<Employment> employment = new ArrayList<>();

  public static final String SERIALIZED_NAME_EDUCATION = "education";
  @SerializedName(SERIALIZED_NAME_EDUCATION)
  private List<Education> education = new ArrayList<>();

  public static final String SERIALIZED_NAME_PHOTOS = "photos";
  @SerializedName(SERIALIZED_NAME_PHOTOS)
  private List<Photo> photos = new ArrayList<>();

  public static final String SERIALIZED_NAME_ECONOMIC = "economic";
  @SerializedName(SERIALIZED_NAME_ECONOMIC)
  private Economic economic;

  public SignalsResponseV20240424() {
  }

  public SignalsResponseV20240424 name(NameWithAlias name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public NameWithAlias getName() {
    return name;
  }

  public void setName(NameWithAlias name) {
    this.name = name;
  }


  public SignalsResponseV20240424 demographics(Demographics demographics) {
    this.demographics = demographics;
    return this;
  }

   /**
   * Get demographics
   * @return demographics
  **/
  @javax.annotation.Nullable
  public Demographics getDemographics() {
    return demographics;
  }

  public void setDemographics(Demographics demographics) {
    this.demographics = demographics;
  }


  public SignalsResponseV20240424 locations(List<Location> locations) {
    this.locations = locations;
    return this;
  }

  public SignalsResponseV20240424 addLocationsItem(Location locationsItem) {
    if (this.locations == null) {
      this.locations = new ArrayList<>();
    }
    this.locations.add(locationsItem);
    return this;
  }

   /**
   * Get locations
   * @return locations
  **/
  @javax.annotation.Nullable
  public List<Location> getLocations() {
    return locations;
  }

  public void setLocations(List<Location> locations) {
    this.locations = locations;
  }


  public SignalsResponseV20240424 emails(List<Email> emails) {
    this.emails = emails;
    return this;
  }

  public SignalsResponseV20240424 addEmailsItem(Email emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @javax.annotation.Nullable
  public List<Email> getEmails() {
    return emails;
  }

  public void setEmails(List<Email> emails) {
    this.emails = emails;
  }


  public SignalsResponseV20240424 phones(List<Phone> phones) {
    this.phones = phones;
    return this;
  }

  public SignalsResponseV20240424 addPhonesItem(Phone phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

   /**
   * Get phones
   * @return phones
  **/
  @javax.annotation.Nullable
  public List<Phone> getPhones() {
    return phones;
  }

  public void setPhones(List<Phone> phones) {
    this.phones = phones;
  }


  public SignalsResponseV20240424 personIds(List<String> personIds) {
    this.personIds = personIds;
    return this;
  }

  public SignalsResponseV20240424 addPersonIdsItem(String personIdsItem) {
    if (this.personIds == null) {
      this.personIds = new ArrayList<>();
    }
    this.personIds.add(personIdsItem);
    return this;
  }

   /**
   * Get personIds
   * @return personIds
  **/
  @javax.annotation.Nullable
  public List<String> getPersonIds() {
    return personIds;
  }

  public void setPersonIds(List<String> personIds) {
    this.personIds = personIds;
  }


  public SignalsResponseV20240424 ipAddresses(List<IpAddress> ipAddresses) {
    this.ipAddresses = ipAddresses;
    return this;
  }

  public SignalsResponseV20240424 addIpAddressesItem(IpAddress ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new ArrayList<>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

   /**
   * Get ipAddresses
   * @return ipAddresses
  **/
  @javax.annotation.Nullable
  public List<IpAddress> getIpAddresses() {
    return ipAddresses;
  }

  public void setIpAddresses(List<IpAddress> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }


  public SignalsResponseV20240424 message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public SignalsResponseV20240424 socialProfiles(List<SocialProfileDetails> socialProfiles) {
    this.socialProfiles = socialProfiles;
    return this;
  }

  public SignalsResponseV20240424 addSocialProfilesItem(SocialProfileDetails socialProfilesItem) {
    if (this.socialProfiles == null) {
      this.socialProfiles = new ArrayList<>();
    }
    this.socialProfiles.add(socialProfilesItem);
    return this;
  }

   /**
   * Get socialProfiles
   * @return socialProfiles
  **/
  @javax.annotation.Nullable
  public List<SocialProfileDetails> getSocialProfiles() {
    return socialProfiles;
  }

  public void setSocialProfiles(List<SocialProfileDetails> socialProfiles) {
    this.socialProfiles = socialProfiles;
  }


  public SignalsResponseV20240424 employment(List<Employment> employment) {
    this.employment = employment;
    return this;
  }

  public SignalsResponseV20240424 addEmploymentItem(Employment employmentItem) {
    if (this.employment == null) {
      this.employment = new ArrayList<>();
    }
    this.employment.add(employmentItem);
    return this;
  }

   /**
   * Get employment
   * @return employment
  **/
  @javax.annotation.Nullable
  public List<Employment> getEmployment() {
    return employment;
  }

  public void setEmployment(List<Employment> employment) {
    this.employment = employment;
  }


  public SignalsResponseV20240424 education(List<Education> education) {
    this.education = education;
    return this;
  }

  public SignalsResponseV20240424 addEducationItem(Education educationItem) {
    if (this.education == null) {
      this.education = new ArrayList<>();
    }
    this.education.add(educationItem);
    return this;
  }

   /**
   * Get education
   * @return education
  **/
  @javax.annotation.Nullable
  public List<Education> getEducation() {
    return education;
  }

  public void setEducation(List<Education> education) {
    this.education = education;
  }


  public SignalsResponseV20240424 photos(List<Photo> photos) {
    this.photos = photos;
    return this;
  }

  public SignalsResponseV20240424 addPhotosItem(Photo photosItem) {
    if (this.photos == null) {
      this.photos = new ArrayList<>();
    }
    this.photos.add(photosItem);
    return this;
  }

   /**
   * Get photos
   * @return photos
  **/
  @javax.annotation.Nullable
  public List<Photo> getPhotos() {
    return photos;
  }

  public void setPhotos(List<Photo> photos) {
    this.photos = photos;
  }


  public SignalsResponseV20240424 economic(Economic economic) {
    this.economic = economic;
    return this;
  }

   /**
   * Get economic
   * @return economic
  **/
  @javax.annotation.Nullable
  public Economic getEconomic() {
    return economic;
  }

  public void setEconomic(Economic economic) {
    this.economic = economic;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignalsResponseV20240424 signalsResponseV20240424 = (SignalsResponseV20240424) o;
    return Objects.equals(this.name, signalsResponseV20240424.name) &&
        Objects.equals(this.demographics, signalsResponseV20240424.demographics) &&
        Objects.equals(this.locations, signalsResponseV20240424.locations) &&
        Objects.equals(this.emails, signalsResponseV20240424.emails) &&
        Objects.equals(this.phones, signalsResponseV20240424.phones) &&
        Objects.equals(this.personIds, signalsResponseV20240424.personIds) &&
        Objects.equals(this.ipAddresses, signalsResponseV20240424.ipAddresses) &&
        Objects.equals(this.message, signalsResponseV20240424.message) &&
        Objects.equals(this.socialProfiles, signalsResponseV20240424.socialProfiles) &&
        Objects.equals(this.employment, signalsResponseV20240424.employment) &&
        Objects.equals(this.education, signalsResponseV20240424.education) &&
        Objects.equals(this.photos, signalsResponseV20240424.photos) &&
        Objects.equals(this.economic, signalsResponseV20240424.economic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, demographics, locations, emails, phones, personIds, ipAddresses, message, socialProfiles, employment, education, photos, economic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignalsResponseV20240424 {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    demographics: ").append(toIndentedString(demographics)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    personIds: ").append(toIndentedString(personIds)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    socialProfiles: ").append(toIndentedString(socialProfiles)).append("\n");
    sb.append("    employment: ").append(toIndentedString(employment)).append("\n");
    sb.append("    education: ").append(toIndentedString(education)).append("\n");
    sb.append("    photos: ").append(toIndentedString(photos)).append("\n");
    sb.append("    economic: ").append(toIndentedString(economic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("demographics");
    openapiFields.add("locations");
    openapiFields.add("emails");
    openapiFields.add("phones");
    openapiFields.add("personIds");
    openapiFields.add("ipAddresses");
    openapiFields.add("message");
    openapiFields.add("socialProfiles");
    openapiFields.add("employment");
    openapiFields.add("education");
    openapiFields.add("photos");
    openapiFields.add("economic");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SignalsResponseV20240424
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SignalsResponseV20240424.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SignalsResponseV20240424 is not found in the empty JSON string", SignalsResponseV20240424.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SignalsResponseV20240424.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SignalsResponseV20240424` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        NameWithAlias.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `demographics`
      if (jsonObj.get("demographics") != null && !jsonObj.get("demographics").isJsonNull()) {
        Demographics.validateJsonElement(jsonObj.get("demographics"));
      }
      if (jsonObj.get("locations") != null && !jsonObj.get("locations").isJsonNull()) {
        JsonArray jsonArraylocations = jsonObj.getAsJsonArray("locations");
        if (jsonArraylocations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("locations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `locations` to be an array in the JSON string but got `%s`", jsonObj.get("locations").toString()));
          }

          // validate the optional field `locations` (array)
          for (int i = 0; i < jsonArraylocations.size(); i++) {
            Location.validateJsonElement(jsonArraylocations.get(i));
          };
        }
      }
      if (jsonObj.get("emails") != null && !jsonObj.get("emails").isJsonNull()) {
        JsonArray jsonArrayemails = jsonObj.getAsJsonArray("emails");
        if (jsonArrayemails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("emails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `emails` to be an array in the JSON string but got `%s`", jsonObj.get("emails").toString()));
          }

          // validate the optional field `emails` (array)
          for (int i = 0; i < jsonArrayemails.size(); i++) {
            Email.validateJsonElement(jsonArrayemails.get(i));
          };
        }
      }
      if (jsonObj.get("phones") != null && !jsonObj.get("phones").isJsonNull()) {
        JsonArray jsonArrayphones = jsonObj.getAsJsonArray("phones");
        if (jsonArrayphones != null) {
          // ensure the json data is an array
          if (!jsonObj.get("phones").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `phones` to be an array in the JSON string but got `%s`", jsonObj.get("phones").toString()));
          }

          // validate the optional field `phones` (array)
          for (int i = 0; i < jsonArrayphones.size(); i++) {
            Phone.validateJsonElement(jsonArrayphones.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("personIds") != null && !jsonObj.get("personIds").isJsonNull() && !jsonObj.get("personIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `personIds` to be an array in the JSON string but got `%s`", jsonObj.get("personIds").toString()));
      }
      if (jsonObj.get("ipAddresses") != null && !jsonObj.get("ipAddresses").isJsonNull()) {
        JsonArray jsonArrayipAddresses = jsonObj.getAsJsonArray("ipAddresses");
        if (jsonArrayipAddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ipAddresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ipAddresses` to be an array in the JSON string but got `%s`", jsonObj.get("ipAddresses").toString()));
          }

          // validate the optional field `ipAddresses` (array)
          for (int i = 0; i < jsonArrayipAddresses.size(); i++) {
            IpAddress.validateJsonElement(jsonArrayipAddresses.get(i));
          };
        }
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if (jsonObj.get("socialProfiles") != null && !jsonObj.get("socialProfiles").isJsonNull()) {
        JsonArray jsonArraysocialProfiles = jsonObj.getAsJsonArray("socialProfiles");
        if (jsonArraysocialProfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("socialProfiles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `socialProfiles` to be an array in the JSON string but got `%s`", jsonObj.get("socialProfiles").toString()));
          }

          // validate the optional field `socialProfiles` (array)
          for (int i = 0; i < jsonArraysocialProfiles.size(); i++) {
            SocialProfileDetails.validateJsonElement(jsonArraysocialProfiles.get(i));
          };
        }
      }
      if (jsonObj.get("employment") != null && !jsonObj.get("employment").isJsonNull()) {
        JsonArray jsonArrayemployment = jsonObj.getAsJsonArray("employment");
        if (jsonArrayemployment != null) {
          // ensure the json data is an array
          if (!jsonObj.get("employment").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `employment` to be an array in the JSON string but got `%s`", jsonObj.get("employment").toString()));
          }

          // validate the optional field `employment` (array)
          for (int i = 0; i < jsonArrayemployment.size(); i++) {
            Employment.validateJsonElement(jsonArrayemployment.get(i));
          };
        }
      }
      if (jsonObj.get("education") != null && !jsonObj.get("education").isJsonNull()) {
        JsonArray jsonArrayeducation = jsonObj.getAsJsonArray("education");
        if (jsonArrayeducation != null) {
          // ensure the json data is an array
          if (!jsonObj.get("education").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `education` to be an array in the JSON string but got `%s`", jsonObj.get("education").toString()));
          }

          // validate the optional field `education` (array)
          for (int i = 0; i < jsonArrayeducation.size(); i++) {
            Education.validateJsonElement(jsonArrayeducation.get(i));
          };
        }
      }
      if (jsonObj.get("photos") != null && !jsonObj.get("photos").isJsonNull()) {
        JsonArray jsonArrayphotos = jsonObj.getAsJsonArray("photos");
        if (jsonArrayphotos != null) {
          // ensure the json data is an array
          if (!jsonObj.get("photos").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `photos` to be an array in the JSON string but got `%s`", jsonObj.get("photos").toString()));
          }

          // validate the optional field `photos` (array)
          for (int i = 0; i < jsonArrayphotos.size(); i++) {
            Photo.validateJsonElement(jsonArrayphotos.get(i));
          };
        }
      }
      // validate the optional field `economic`
      if (jsonObj.get("economic") != null && !jsonObj.get("economic").isJsonNull()) {
        Economic.validateJsonElement(jsonObj.get("economic"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SignalsResponseV20240424.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SignalsResponseV20240424' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SignalsResponseV20240424> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SignalsResponseV20240424.class));

       return (TypeAdapter<T>) new TypeAdapter<SignalsResponseV20240424>() {
           @Override
           public void write(JsonWriter out, SignalsResponseV20240424 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SignalsResponseV20240424 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SignalsResponseV20240424 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SignalsResponseV20240424
  * @throws IOException if the JSON string is invalid with respect to SignalsResponseV20240424
  */
  public static SignalsResponseV20240424 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SignalsResponseV20240424.class);
  }

 /**
  * Convert an instance of SignalsResponseV20240424 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

